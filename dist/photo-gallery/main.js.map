{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/gallery/gallery.component.html","webpack:///./src/app/gallery/gallery.component.ts","webpack:///./src/app/image-detail/image-detail.component.html","webpack:///./src/app/image-detail/image-detail.component.ts","webpack:///./src/app/imagefilter.pipe.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/shared/image.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GalleryComponent } from './gallery/gallery.component';\nimport { ImageDetailComponent } from './image-detail/image-detail.component';\n\nconst routes: Routes = [{\n  path:'gallery' ,component : GalleryComponent\n},\n{\n  path:'image/:id' ,component : ImageDetailComponent\n},\n{\n  path:'' , redirectTo : '/gallery' , pathMatch :'full'\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div class=\"container\">\n  <app-navbar></app-navbar>\n  <!-- <app-gallery></app-gallery> -->\n  <router-outlet></router-outlet>\n\n</div>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'photo-gallery';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { GalleryComponent } from './gallery/gallery.component';\nimport { ImageDetailComponent } from './image-detail/image-detail.component';\nimport { ImageService } from './shared/image.service';\nimport { ImagefilterPipe } from './imagefilter.pipe';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    GalleryComponent,\n    ImageDetailComponent,\n    ImagefilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [ImageService,ImagefilterPipe  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"filterPhoto('all')\">normal</button>\n<button type=\"button\" class=\"btn btn-primary\" (click)=\" filterPhoto('boats') \">boats</button>\n<button type=\"button\" class=\"btn btn-primary\" (click)=\" filterPhoto('camping') \">camping</button>\n<button type=\"button\" class=\"btn btn-primary\" (click)=\" filterPhoto('library') \">library</button>\n\n<ul class=\"col\" id=\"thumbnailsList\">\n\n      <li *ngFor=\"let image of (apiArray )\">\n\n        <a href='{{image.webformatURL}}' >\n        <img src=\"{{ image.webformatURL}}\" id=\"tn\" width=\"200\" height=\"160\">\n      </a>\n      </li>\n\n</ul>\n","import { Component, OnInit , OnDestroy,OnChanges,DoCheck, AfterViewInit, AfterContentChecked} from '@angular/core';\nimport { ImageService } from '../shared/image.service';\n\n@Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.css']\n})\nexport class GalleryComponent implements OnInit {\n\n  imageArray :any;\n  apiArray : any = [];\n$searchItem :  any ;\n  constructor(private imgService :  ImageService) { }\n  filterBy ?: string = \"all\";\n\n\n  ngOnInit() {\n      this.imgService.getfromApi().subscribe((res)=>{\n        this.apiArray = res['hits'];\n\n      });\n\n\n     this.imgService.searchItem.subscribe((res)=>{\n       this.$searchItem  =  res;\n       //todo if no item is found do something\n       if(this.$searchItem !== 'Default'){\n       this.imgService.getImagebyfilter(this.$searchItem).subscribe((res)=>{\n            // console.log(this.$searchItem)\n             this.apiArray = res['hits'];\n          });\n        }\n      });\n\n  }\n\n\n\n\n  filterPhoto(arg){\n    // console.log(arg==='all'?true:false);\n\n      if(arg==='all'){\n        this.imgService.getfromApi().subscribe((res)=>{\n          this.apiArray = res['hits'];\n      });\n      }\n    else{\n\n      this.imgService.getImagebyfilter(arg).subscribe((res)=>{\n\n        this.apiArray = res['hits'];\n\n        });\n    }\n\n\n  }\n\n\n}\n","<div class=\"row\">\n  <div class=col-md-12>\n    <div [ngStyle]=\"{'background-image':'url('+ image.url +')'}\" class=\"img-container paper\">\n    </div>\n  </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-12 caption-row\">\n      <span id=\"caption\">\n        <!-- {{image.caption}} -->\n      </span>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ImageService } from '../shared/image.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-image-detail',\n  templateUrl: './image-detail.component.html',\n  styleUrls: ['./image-detail.component.css']\n})\nexport class ImageDetailComponent implements OnInit {\n  image:any;\n  constructor(private imgService : ImageService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.image = this.imgService.getImagebyID(\n      +this.route.snapshot.params['id'])\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ImageService } from \"./shared/image.service\";\n@Pipe({\n  name: 'imagefilter'\n})\nexport class ImagefilterPipe implements PipeTransform {\n  finalres :any =[];\n  constructor(private Service : ImageService){}\n  transform(value: any[], args?: any): any {\n      if(args === 'all'){\n        console.log(args);\n        this.Service.getfromApi().subscribe((res)=>{\n        // console.log(res);\n         return this.finalres = res;\n\n\n        });\n        console.log('your res',this.finalres);\n      }\n      else\n      {\n        console.log(args);\n         this.Service.getImagebyfilter(args).subscribe((res)=>{\n          // console.log(res)\n         return this.finalres = res;\n          });\n\n          console.log('your res',this.finalres);\n      //   return value.filter((item)=>{\n      //  return item.category == args;\n      // })\n      }\n\n    // return this.finalres;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">Image Gallery</a>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <form class=\"form-inline my-2 my-lg-0\">\n      <input class=\"form-control mr-sm-2\" #searchEle (keyup)=\"search(searchEle)\" type=\"search\" placeholder=\"Add new filter\" aria-label=\"Search\">\n      <!-- <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button> -->\n    </form>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { ImageService } from '../shared/image.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private imageService :  ImageService) { }\n\n  ngOnInit() {\n  }\n\n  search(keyword : HTMLInputElement){\n    // console.log(keyword.value);\n    this.imageService.changeSearch(keyword.value);\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from \"../../environments/environment\";\nimport { BehaviorSubject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  selectedImage : any[] = [];\n  private search  = new BehaviorSubject<string>('Default')\n  searchItem = this.search.asObservable();\n  constructor(private http : HttpClient) { }\n\n  changeSearch(searchItem){\n    this.search.next(searchItem);\n  }\n  getImage(){\n    return this.selectedImage = IMAGES.slice(0);\n  }\n\n  getImagebyID(id : number){\n    return  IMAGES.slice(0).find((arg)=>arg.id == id);\n  }\n\n  getfromApi(){\n    return this.http.get(`https://pixabay.com/api/?key=${environment.API_KEY}&image_type=photo&pretty=true`);\n  }\n\n  getImagebyfilter(query){\n    return this.http.get(`https://pixabay.com/api/?key=${environment.API_KEY}&q=${query}&image_type=photo&pretty=true`);\n  }\n}\n\n\nconst IMAGES = [\n  {\"id\":1, \"category\": \"boats\", \"caption\": \"View from the boat\", \"url\":\"assets/img/boat_01.jpeg\"},\n  {\"id\":3, \"category\": \"boats\", \"caption\": \"The water was nice\", \"url\":\"assets/img/boat_03.jpeg\"},\n  {\"id\":6, \"category\": \"camping\", \"caption\": \"Camping Trip '17'\", \"url\":\"assets/img/camping_01.jpeg\"},\n  {\"id\":7, \"category\": \"camping\", \"caption\": \"Kim and Jessie\", \"url\":\"assets/img/camping_02.jpeg\"},\n  {\"id\":13, \"category\": \"library\", \"caption\": \"Big library\", \"url\":\"assets/img/library_01.jpeg\"},\n  {\"id\":14, \"category\": \"library\", \"caption\": \"Stacks\", \"url\":\"assets/img/library_02.jpeg\"},\n];\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_KEY : '12387168-13fb4c103079c3a3c51c1ac5b'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}